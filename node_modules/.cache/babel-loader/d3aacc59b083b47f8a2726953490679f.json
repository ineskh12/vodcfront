{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Unity = void 0;\n\nvar react_1 = require(\"react\");\n\nvar unity_loader_service_1 = require(\"../services/unity-loader-service\"); // TODO turn into functional component\n\n\nvar Unity =\n/** @class */\nfunction (_super) {\n  __extends(Unity, _super);\n\n  function Unity() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * The UnityContext passed by the props.\n     * @private\n     * @type {UnityContext}\n     */\n\n\n    _this.unityContext = _this.props.unityContext;\n    /**\n     * The UnityLoader service instance.\n     * @private\n     * @type {UnityLoaderService}\n     */\n\n    _this.unityLoaderService = new unity_loader_service_1.UnityLoaderService();\n    /**\n     * A flag representing the component's mount state.\n     * @private\n     * @type {boolean}\n     */\n\n    _this.isComponentMounted = false;\n    return _this;\n  }\n  /**\n   * Event invoked by the UnityInstance when the initialization is progressing.\n   * Will be used to track the loading progression and invokes the event listeners\n   * for both 'progress' and 'loaded' when the progression hits a value of '1'.\n   * @private\n   * @param {number} progression\n   */\n\n\n  Unity.prototype.onProgress = function (progression) {\n    this.unityContext.dispatchEventListener(\"progress\", progression);\n\n    if (progression === 1) {\n      this.unityContext.dispatchEventListener(\"loaded\");\n      if (typeof this.htmlCanvasElementReference !== \"undefined\") this.unityContext.dispatchEventListener(\"canvas\", this.htmlCanvasElementReference);\n    }\n  };\n  /**\n   * Event invoked when the component is mounted. This sets the component\n   * reference and starts the mounting of the UnityInstance.\n   * @public\n   */\n\n\n  Unity.prototype.componentDidMount = function () {\n    this.isComponentMounted = true;\n    this.mountUnityInstance();\n  };\n  /**\n   * Event invoked when the component will unmount. This force quits the\n   * UnityInstance which will clear it from the memory.\n   * @public\n   */\n\n\n  Unity.prototype.componentWillUnmount = function () {\n    this.unityContext.quitUnityInstance();\n    this.isComponentMounted = false;\n  };\n  /**\n   * Initialized the Unity Loader and mounts the UnityInstance to the component.\n   * @private\n   * @async\n   * @returns {Promise<void>} a promise resolving when Unity loaded correctly.\n   */\n\n\n  Unity.prototype.mountUnityInstance = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _unityInstanceParameters, _unityInstance, message_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]); // Unity requires the loader script to be appended and loaded before we\n            // can safely instantiate Unity and mount the component.\n\n\n            return [4\n            /*yield*/\n            , this.unityLoaderService.addFromUrl(this.unityContext.unityConfig.loaderUrl)];\n\n          case 1:\n            // Unity requires the loader script to be appended and loaded before we\n            // can safely instantiate Unity and mount the component.\n            _a.sent(); // When the loader service was fetching the required scripts, it is\n            // possible for the component to be unmounted. This is why we check if it\n            // is still mounted, if not, we do not proceed instantiating Unity.\n\n\n            if (this.isComponentMounted === false) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _unityInstanceParameters = __assign(__assign({}, this.unityContext.unityConfig), {\n              printErr: function (message) {\n                return _this.unityContext.dispatchEventListener(\"error\", message);\n              },\n              print: function (message) {\n                return _this.unityContext.dispatchEventListener(\"debug\", message);\n              }\n            });\n            if (this.props.devicePixelRatio !== undefined) _unityInstanceParameters.devicePixelRatio = this.props.devicePixelRatio;\n            if (this.unityContext.unityConfig.webglContextAttributes !== undefined) _unityInstanceParameters.webglContextAttributes = this.unityContext.unityConfig.webglContextAttributes;\n            if (this.props.matchWebGLToCanvasSize !== undefined) _unityInstanceParameters.matchWebGLToCanvasSize = this.props.matchWebGLToCanvasSize;\n            return [4\n            /*yield*/\n            , createUnityInstance(this.htmlCanvasElementReference, _unityInstanceParameters, this.onProgress.bind(this))];\n\n          case 2:\n            _unityInstance = _a.sent(); // We increment the unique identifier counter to avoid conflicts.\n\n            Unity.uniqueIdentifiers++; // Finally pass the instance back to the context object.\n\n            this.unityContext.setUnityInstance(_unityInstance); // Since the creation of the Unity Instance is async, we'll check the\n            // component's mount state right aftater instantiating. If the component\n            // is no longer mounted, we'll quit the Unity instance right away.\n            // This needs to occur after the setUnityInstance call because\n            // quitUnityInstance requires the instance to be set.\n            // HACK requires type cast to boolean due to await between comparisons.\n\n            if (this.isComponentMounted === false) return [2\n            /*return*/\n            , this.unityContext.quitUnityInstance()];\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            message_1 = _a.sent();\n            this.unityContext.dispatchEventListener(\"error\", message_1);\n            console.error(\"A problem occurred while mounting\", message_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Renders the unity wrapper and player.\n   * @public\n   * @returns {React.ReactNode} element\n   */\n\n\n  Unity.prototype.render = function () {\n    var _this = this;\n\n    return react_1.createElement(\"canvas\", {\n      id: \"unity-canvas-\" + Unity.uniqueIdentifiers,\n      ref: function (ref) {\n        return _this.htmlCanvasElementReference = ref;\n      },\n      className: this.props.className || \"\",\n      tabIndex: this.props.tabIndex || undefined,\n      style: this.props.style || {}\n    });\n  };\n  /**\n   * A counter to track the number of times a unique identifier was generated.\n   */\n\n\n  Unity.uniqueIdentifiers = 0;\n  return Unity;\n}(react_1.PureComponent);\n\nexports.Unity = Unity;","map":null,"metadata":{},"sourceType":"script"}